version: '3.1'
services:
  ### FRONTEND ###
  frontend:
    build: docker/frontend
    container_name: frontend
    networks:
      demands:
        ipv4_address: 192.168.16.2
    volumes:
      - ./frontend:/var/www/frontend:Z
    ports:
      - "80:4200"

  webserver:
    image: nginx:alpine
    container_name: api-webserver
    working_dir: /application
    networks:
      demands:
        ipv4_address: 192.168.16.3
    volumes:
      - .:/application
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"

  db-service:
    image: postgres:11-alpine
    container_name: database
    networks:
      demands:
        ipv4_address: 192.168.16.5
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
    - "5432:5432"

  php-fpm:
    build: docker/php-fpm
    container_name: api-php-fpm
    working_dir: /application
    networks:
      demands:
        ipv4_address: 192.168.16.4
    volumes:
      - .:/application
      - ./docker/php-fpm/php-ini-overrides.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini
      - ./docker/php-fpm/php-ini-overrides.ini:/etc/php/7.3/cli/conf.d/99-overrides.ini

volumes:
  db-service-data:

networks:
  demands:
    ipam:
      driver: default
      config:
        - subnet: 192.168.16.0/20
